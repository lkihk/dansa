<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
    <title>key setup</title>
    <script src="js/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="js/Dansa.js" type="text/javascript"></script>
    <script src="js/EventEmitter.js" type="text/javascript"></script>
    <script src="js/GameInput.js" type="text/javascript"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />
</head>
<body>
    <h1>key setup</h1>
    <span class="info"></span>
    <span class="currentKey"></span>
    <script>
        var $key = $(".currentKey");
        var $info = $(".info");

        var gameInput = new DANSA.GameInput();
        $info.text(gameInput.isSetUp ? 'Got keys! Press START to continue, or SELECT to reconfigure.' : 'Keys not set.');

        var stuff = DANSA.GameInput.Keys;
        var keys = Object.keys(stuff);

        // shim layer with setTimeout fallback
        window.requestAnimFrame = (function(){
          return  window.requestAnimationFrame       ||
                  window.webkitRequestAnimationFrame ||
                  window.mozRequestAnimationFrame    ||
                  function( callback ){
                    window.setTimeout(callback, 1000 / 60);
                  };
        })();

        (function animloop(){
            requestAnimFrame(animloop);
            gameInput.update();

            if(gameInput.isSetUp){
                if(gameInput.players[0].buttonState & DANSA.GameInput.Keys.START){
                    window.location = 'index.html';
                }
                if(gameInput.players[0].buttonState & DANSA.GameInput.Keys.BACK){
                    gameInput.isSetUp = false;
                    var key = keys.pop();
                    gameInput.players[0].buttonState = gameInput.players[0].buttonState & ~DANSA.GameInput.Keys.BACK
                    gameInput.startMap(0, stuff[key]);
                    $key.text(key);
                }
            }
        })();

        gameInput.on('mapped', function(){
            // Show next key to map
            if(keys.length){
                var key = keys.pop();
                gameInput.startMap(0, stuff[key]);
                $key.text(key);
            } else {
                $key.text('Done!');
                gameInput.saveKeymaps();
                window.location = 'index.html';
            }
        });

    </script>
</body>
</html>